// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  games          Game[]
  accounts       Account[]
  Session        Session[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum GameType {
  mcq
  open_ended
}

model Game {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  userId      String     @db.ObjectId
  topic       String
  timeStarted DateTime
  timeEnded   DateTime?
  questions   Question[]
  gameType    GameType
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model TopicCount {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  topic String @unique
  count Int
}

model Question {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  question          String
  answer            String
  gameId            String   @db.ObjectId
  options           Json?
  percentageCorrect Float?
  isCorrect         Boolean?
  questionType      GameType
  userAnswer        String?

  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}
